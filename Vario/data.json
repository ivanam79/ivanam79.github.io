{
    "project": {},
    "files": {
        "accessors.js": {
            "name": "accessors.js",
            "modules": {},
            "classes": {
                "$v.Accessor": 1,
                "$v.ValueAccessor": 1,
                "$v.ArrayAccessor": 1
            },
            "fors": {
                "$v": 1
            },
            "namespaces": {}
        },
        "main.js": {
            "name": "main.js",
            "modules": {
                "Vario": 1
            },
            "classes": {
                "$v": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Vario": {
            "name": "Vario",
            "submodules": {},
            "classes": {
                "$v": 1,
                "$v.Accessor": 1,
                "$v.ValueAccessor": 1,
                "$v.ArrayAccessor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "accessors.js",
            "line": 198,
            "description": "Main Vario class"
        }
    },
    "classes": {
        "$v": {
            "name": "$v",
            "shortname": "$v",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Vario",
            "file": "main.js",
            "line": 27,
            "description": "Main Vario class",
            "static": 1
        },
        "$v.Accessor": {
            "name": "$v.Accessor",
            "shortname": "$v.Accessor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Vario",
            "file": "accessors.js",
            "line": 83,
            "description": "Implementation of the Accessor base class"
        },
        "$v.ValueAccessor": {
            "name": "$v.ValueAccessor",
            "shortname": "$v.ValueAccessor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Vario",
            "file": "accessors.js",
            "line": 148,
            "description": "Implementation of the ValueAccessor class",
            "extends": "$v.Accessor"
        },
        "$v.ArrayAccessor": {
            "name": "$v.ArrayAccessor",
            "shortname": "$v.ArrayAccessor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Vario",
            "file": "accessors.js",
            "line": 198,
            "description": "Implementation of the ArrayAccessor class",
            "extends": "$v.Accessor"
        }
    },
    "classitems": [
        {
            "file": "accessors.js",
            "line": 27,
            "description": "A constant indicating value has changed",
            "itemtype": "property",
            "name": "VALUE_CHANGED",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "type": "int",
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 39,
            "description": "A constant indicating an item has been added to a collection",
            "itemtype": "property",
            "name": "COLLECTION_ITEM_ADDED",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "type": "int",
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 50,
            "description": "A constant indicating an item has been removed from a collection",
            "itemtype": "property",
            "name": "COLLECTION_ITEM_REMOVED",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "type": "int",
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 61,
            "description": "A constant indicating an item in a collection has changed",
            "itemtype": "property",
            "name": "COLLECTION_ITEM_REMOVED",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "type": "int",
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 72,
            "description": "Creates an accessor with initial value and a function which handles modifying and retrieving the underlying data",
            "itemtype": "method",
            "name": "createAccessor",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "initialValue",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "accessorFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "$v.Accessor"
            },
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 92,
            "description": "Current value",
            "itemtype": "property",
            "name": "currentValue",
            "type": "Mixed",
            "access": "public",
            "tagname": "",
            "class": "$v.Accessor"
        },
        {
            "file": "accessors.js",
            "line": 100,
            "description": "Array of registered listeners",
            "itemtype": "property",
            "name": "listeners",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "$v.Accessor"
        },
        {
            "file": "accessors.js",
            "line": 108,
            "description": "Registers a listener for value changes",
            "example": [
                " \n     var v1 = $v.value(\"value 1\");\n     v1.listen(function(newValue, oldValue, changeType, collectionKey) {\n         alert(\"Value has changed\");\n     });\n     v1(\"value 2\");"
            ],
            "itemtype": "method",
            "name": "listen",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "$v.Accessor"
        },
        {
            "file": "accessors.js",
            "line": 127,
            "description": "Creates a value, which can be monitored for changes",
            "example": [
                "\n     var v1 = $v.value(\"value 1\"); // creates and initializes a value\n     console.log(v1());            // outputs \"value 1\"\n     \n     v1(\"value 2\");                // updating a value\n     console.log(v1());            // outputs \"value 2\"\n     \n     var val=$v.value();           // creates undefined value\n     console.log(val());           // outputs undefined"
            ],
            "itemtype": "method",
            "name": "value",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "initialValue",
                    "description": "",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "$v.ValueAccessor"
            },
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 174,
            "description": "Creates an array, which can be monitored for changes",
            "example": [
                "\n     var arr = $v.array([]); // creates an empty array\n     arr.add(1);\n     arr.add(\"b\");\n     console.log(arr());     // outputs [1, \"b\"]\n     \n     arr.insert(\"a\", 1);     // inserts \"a\" at position 1\n     arr.remove(2);          // removes the item at position 2\n     console.log(arr());     // outputs [1, \"a\"]\n     \n     arr(0, \"b\");            // updates element at index 0\n     console.log(arr(0));    // retrieves item at index 0 - \"b\"\n     console.log(arr());     // outputs [\"b\", \"a\"]"
            ],
            "itemtype": "method",
            "name": "array",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "initialValue",
                    "description": "",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "$v.ArrayAccessor"
            },
            "class": "$v"
        },
        {
            "file": "accessors.js",
            "line": 207,
            "description": "Appends a new item",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "$v.ArrayAccessor"
        },
        {
            "file": "accessors.js",
            "line": 217,
            "description": "Inserts new item at specified position",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "$v.ArrayAccessor"
        },
        {
            "file": "accessors.js",
            "line": 228,
            "description": "Removes item at specified position",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "$v.ArrayAccessor"
        },
        {
            "file": "accessors.js",
            "line": 241,
            "description": "Creates a hash map, which can be monitored for changes",
            "example": [
                "\n     var hm = $v.array({}); // creates an empty hash map\n     hm(\"key1\", \"value1\");  // inserts or updates new item\n     hm(\"key2\", \"value2\");\n     \n     console.log(hm(\"key1\")); // outputs \"value 1\"\n     console.log(hm());       // outputs {key1: value1, key2: value2}\n     \n     hm.remove(\"key1\");       // removes item"
            ],
            "itemtype": "method",
            "name": "hashMap",
            "access": "public",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "initialValue",
                    "description": "",
                    "type": "Mixed",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "$v.HashMapAccessor"
            },
            "class": "$v"
        },
        {
            "file": "main.js",
            "line": 35,
            "description": "API Version",
            "itemtype": "property",
            "name": "VERSION",
            "access": "public",
            "tagname": "",
            "static": 1,
            "final": 1,
            "type": "String",
            "class": "$v",
            "module": "Vario"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " accessors.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " accessors.js:127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " accessors.js:174"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " accessors.js:241"
        }
    ]
}